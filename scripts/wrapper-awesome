#!/bin/bash
# awesomewm wrapper utility

case "$1" in
    wm)
        shift
        case "$1" in 
            restart)
                awesome-client "awesome.restart()"
                ;;
            quit)
                awesome-client "awesome.quit()"
                ;;
            *)
                echo "Couldn't find subcommand '$1' in command 'wm'"
                ;;
        esac
        ;;
    window)
        shift
        case "$1" in
            close)
                awesome-client "client.focus:kill()"
                ;;
            maximize)
                awesome-client "if not client.focus then return end
                                client.focus.maximized = not client.focus.maximized"
                ;;
            minimize) # unminimized if there is a minimized window otherwise minimizes the current one
                awesome-client "local minimized_c = require(\"awful\").client.restore()
                                if minimized_c then client.focus = minimized_c; minimized_c:raise()
                                elseif client.focus then client.focus.minimized = true end"
                ;;
            floating)
                awesome-client "if not client.focus then return end
                                client.focus.floating = not client.focus.floating"
                                ;;
            launch)
                shift
                awesome-client "require(\"awful\").spawn(\"$1\")"
                ;;
            swap)
                shift
                awesome-client "local a = require(\"awful\")
                                local c = client.focus
                                if c and not c.floating then 
                                   a.client.swap.global_bydirection(\"$1\")
                                end"
                ;;
            move)
                shift
                awesome-client "local a = require(\"awful\")
                               local c = client.focus
                               local gap = 20
                               local direction = \"$1\"
                               if direction == \"left\" then 
                                   c:relative_move(-gap, 0, 0, 0)
                               elseif direction == \"right\" then 
                                   c:relative_move(gap, 0, 0, 0)
                               elseif direction == \"up\" then 
                                   c:relative_move(0, -gap, 0, 0)
                               elseif direction == \"down\" then 
                                   c:relative_move(0, gap, 0, 0)
                               end"
                ;;
            scale) 
                shift
                awesome-client "local a = require(\"awful\")
                               local c = client.focus
                               local gap = -20
                               if \"$1\" == \"up\" then gap = 20 end
                               if not c then return end
                               c:relative_move(-gap/2, -gap/2, gap, gap)"
                ;;
            is) # exits with error code 0 if true else it is false
                shift
                case "$1" in
                    floating)
                        awesome-client "return client.focus.floating" | grep "true" || exit 1
                        ;;
                    *)
                        echo "Couldn't find subcommand '$1' in command 'window is'"
                        ;;
                esac
                ;;
            exists)
                shift
                awesome-client "for _, c in ipairs(client.get()) do
                                    if c.class == \"$1\" then 
                                       return true
                                    end
                                end
                                return false" | grep "true" || exit 1
                ;;
            # the following two check whether a window is floating or not first, and act accordingly
            drag) 
                shift
                swish window is floating && swish window move "$1" || swish window swap "$1"
                ;;
            resize)
                shift
                if [ "$1" == "left" ]; then
                    swish window is floating && swish window scale down || swish layout masterwidthfact "-0.05"
                elif [ "$1" == "right" ]; then
                    swish window is floating && swish window scale up || swish layout masterwidthfact "0.05"
                elif [ "$1" == "down" ]; then
                    swish window is floating && swish window scale down || swish layout slavewidthfact "-0.05"
                elif [ "$1" == "up" ]; then
                    swish window is floating && swish window scale up || swish layout slavewidthfact "0.05"
                fi
                ;;
            focus)
                shift
                case "$1" in
                    next|prev)
                        [ "$1" == "next" ] && STEP="1" || STEP="-1"
                        awesome-client "require(\"awful\").client.focus.byidx($STEP)"
                        ;;
                    left|right|up|down)
                        awesome-client "require(\"awful\").client.focus.global_bydirection(\"$1\")"
                        ;;
                    *)
                        echo "Couldn't find subcommand '$1' in command 'window'"
                        ;;
                esac
                ;;
            *)
                echo "Couldn't find subcommand '$1' in command 'window'"
                ;;
        esac
        ;;
    tag)
        shift
        case "$1" in
            switcher) # toggles between the first and second tag
                awesome-client "local a = require(\"awful\") 
                                local s = a.screen.focused()
                                if s.selected_tag.index == 1 then 
                                    s.tags[2]:view_only()
                                else
                                    s.tags[1]:view_only()
                                end"
                ;;
            next|prev)
                awesome-client "require(\"awful\").tag.view$1()"
                ;;
            toggle) # toggles a tag based on its name
                shift
                awesome-client "local a = require(\"awful\")
                                local t = a.tag.find_by_name(a.screen.focused(), \"$1\")
                                a.tag.viewtoggle(t)"
                ;;
            focus)
                shift
                awesome-client "local s = require(\"awful\").screen.focused()
                                local t = s.tags[$1]
                                if t then t:view_only() end"
                ;;
            move-window)
                shift
                awesome-client "if not client.focus then return end
                                local t = client.focus.screen.tags[$1]
                                if t then client.focus:move_to_tag(t) end"
                ;;
            delete)
                awesome-client "local t = require(\"awful\").screen.focused().selected_tag;
                                if not t then return end; t:delete()"
                ;;
            add)
                awesome-client "local a = require(\"awful\")
                                local sf = a.screen.focused()
                                a.tag.add(
                                    tostring(#sf.tags+1), 
                                    {screen = af, layout = a.layout.layouts[1] }
                                ):view_only()"
                ;;
            rename) # needs a promptbox on the screen named "mypromptbox"
                awesome-client "local a = require(\"awful\")
                                a.prompt.run({
                                    prompt = \"New tag name: \",
                                    textbox = a.screen.focused().mypromptbox.widget,
                                    exe_callback = function(new_name)
                                        if not new_name or #new_name == 0 then return end
                                        local t = a.screen.focused().selected_tag
                                        if t then t.name = new_name end
                                    end
                                })"
                ;;
            *)
                echo "Couldn't find subcommand '$1' in command 'tag'"
                ;;
        esac
        ;;
    layout)
        shift
        case "$1" in 
            next|prev)
                [ "$1" == "next" ] && STEP="1" || STEP="-1"
                awesome-client "require(\"awful\").layout.inc($STEP)"
                ;;
            masterwidthfact)
                shift
                awesome-client "require(\"awful\").tag.incmwfact($1)"
                ;;
            slavewidthfact)
                shift
                awesome-client "require(\"awful\").client.incwfact($1)"
                ;;
            mastercount)
                shift
                awesome-client "require(\"awful\").tag.incnmaster($1)"
                ;;
            gap)
                shift
                awesome-client "local t = require(\"awful\").screen.focused().selected_tag
                                t.gap = t.gap + $1"
                ;;
            *)
                echo "Couldn't find subcommand '$1' in command 'layout'"
                ;;
        esac
        ;;
    notifications)
        shift 
        case "$1" in
            killall)
                awesome-client "local n = require(\"naughty\")
                                n.destroy_all_notifications(nil, n.notificationClosedReason.dismissedByUser)"
                ;;
        esac
        ;;
    # from here on commands are likely to not work in other awesomewm configs
    toggle)
        shift
        awesome-client "awesome.emit_signal(\"toggle::$1\")"
        ;;
    tabbing)
        shift
        case "$1" in
            iter)
                awesome-client "require(\"bling\").module.tabbed.iter(1)"
                ;;
            add)
                awesome-client "require(\"bling\").module.tabbed.pick_with_dmenu()"
                ;;
            pop)
                awesome-client "require(\"bling\").module.tabbed.pop()"
                ;;
            pick)
                shift
                awesome-client "require(\"bling\").module.tabbed.pick_by_direction(\"$1\")"
                ;;
            *)
                echo "Couldn't find subcommand '$1' in command 'tabbing'"
                ;;
        esac
        ;;
    wallpaper)
        awesome-client "local b = require(\"beautiful\")
            require(\"awful\").screen.connect_for_each_screen(function(s)
                require(\"bling\").module.tiled_wallpaper(\"\", s, { -- ﱢﰉ
                    fg = b.xcolor0,
                    bg = b.xbg,
                    font = \"JetBrains Mono Nerd Font\", 
                    font_size = 17,
                    padding = 70,
                    zickzack = true
                })
            end)"
        ;;
    *)
        echo "Command '$1' couldn't be found"
        ;;
esac
